library(XML)
library(tidyverse)
library(lubridate)
library(scales)
library(ggthemes)
library(gridExtra)

xml <- xmlParse('E:/Documents/Health/export12Jun2019.xml')
#summary(xml)
df_record <-   XML:::xmlAttrsToDataFrame(xml["//Record"])
df_activity <- XML:::xmlAttrsToDataFrame(xml["//ActivitySummary"])
df_workout <-  XML:::xmlAttrsToDataFrame(xml["//Workout"])
df_clinical <- XML:::xmlAttrsToDataFrame(xml["//ClinicalRecord"])
df_location <- XML:::xmlAttrsToDataFrame(xml["//Location"]) %>% 
  mutate(latitude = as.numeric(as.character(latitude)),
         longitude = as.numeric(as.character(longitude)))


df <- df_record %>%
  mutate(device = gsub(".*(name:)|,.*", "",device),
         value = as.numeric(as.character(value)),
         endDate = ymd_hms(endDate,tz="America/New_York"),
         date = date(endDate),
         year = year(endDate),
         month = month(endDate),
         day = day(endDate),
         yday = yday(endDate),
         wday = wday(endDate),
         hour = hour(endDate),
         minute = minute(endDate),
         type = str_remove(type, "HKQuantityTypeIdentifier")
  ) %>% filter(endDate >= '2018-10-01') %>% filter(endDate < '2019-06-02')

df2 <- df_activity %>% 
  mutate(endDate = ymd(dateComponents,tz="America/New_York"),
         date = date(endDate),
         year = year(endDate),
         month = month(endDate),
         day = day(endDate),
         yday = yday(endDate),
         wday = wday(endDate),
         hour = hour(endDate),
         minute = minute(endDate)
  ) %>% filter(endDate >= '2018-10-01') %>% filter(endDate < '2019-06-02')

#df %>% select(type) %>% distinct()

BodyMass <- df %>%
  arrange(endDate) %>% 
  filter(type == 'BodyMass') %>% 
    ggplot(aes(x= date, y = value)) +
  geom_point(alpha = 0.3,color="red") +
  geom_smooth(span = 0.5, col = "darkblue",fill="lightblue") +
  labs(title = "Midhun's Weight(lb) Chart") +
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank()) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") +
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray")
#BodyMass

RestingHeartRate <- df %>%
  arrange(endDate) %>% 
  filter(type == 'RestingHeartRate') %>% 
  ggplot(aes(x= date, y = value)) +
  geom_point(alpha = 0.3,color="red") +
  geom_smooth(span = .2, col = "darkblue",fill="lightblue") +
  labs(title = "Midhun's Resting Heart Rate Chart") +
  theme(axis.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank())+
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y")+
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray")
#RestingHeartRate


VO2Max <- df %>%
  arrange(endDate) %>% 
  filter(type == 'VO2Max') %>% 
  ggplot(aes(x= date, y = value)) +
  geom_point(alpha = 0.3,color="red") +
  geom_smooth(span = .2, col = "darkblue",fill="lightblue") +
  labs(title = "Midhun's VO2Max Chart") +
  theme(axis.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank()) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y")+
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray")
#VO2Max

ActiveEnergy <- df %>%
  filter(type == 'ActiveEnergyBurned') %>% 
  filter(device == 'Apple Watch') %>% 
  group_by(date) %>% 
  summarize(Energy=sum(value)) %>% 
  arrange(date) %>% 
  ggplot(aes(x= date, y = Energy)) +
  geom_point(alpha = 0.3,color="#FA114F") +
  geom_smooth(span = .2, col = "darkblue",fill="#FA114F") +
  labs(title = "Midhun's Active Energy Burned(kcal) Chart") +
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank()) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") +
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(Energy), label="Started Running"), size=4, angle=90, vjust=1,color="gray30")+
  geom_hline(yintercept=c(600,1200,1800),linetype=2,color="blue") +
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=600, label="100% Active Goal"), size=4, angle=00, vjust=1, hjust=.2,color="gray")+
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=1200, label="200% Active Goal"), size=4, angle=00, vjust=1, hjust=.2,color="gray")+  
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=1800, label="300% Active Goal"), size=4, angle=00, vjust=1, hjust=.2,color="gray")+  
  geom_text(mapping=aes(x=as.Date("2019-03-17"),y=max(Energy), label="ATT Half Marathon - 2:20hr"), size=4, angle=00, hjust=.5,vjust=1,color="lightgreen")+
  geom_text(mapping=aes(x=as.Date("2019-06-01"),y=max(Energy), label="Raleigh 13.1 - 1:59hr"), size=4, angle=00, hjust=.7,vjust=3,color="lightgreen")
#ActiveEnergy




ExerciseTime <- df2 %>% 
  group_by(date) %>% 
  summarize(value=as.numeric(as.character(appleExerciseTime))) %>% 
  arrange(date) %>%  
  ggplot(aes(x= date, y = value)) +
  geom_point(alpha = 0.3,color="#92E82A") +
  geom_smooth(span = .2, col = "darkblue",fill="#92E82A") +
  labs(title = "Midhun's Exercise Time(min) Chart")  +
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank()) + 
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") +
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray") +
  geom_hline(yintercept=c(60,120,180),linetype=2,color="blue") +
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=60, label="200% Exercise Goal"), size=4, angle=00, vjust=1, hjust=.2,color="gray")+
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=120, label="400% Exercise Goal"), size=4, angle=00, vjust=1, hjust=.2,color="gray")+  
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=180, label="600% Exercise Goal"), size=4, angle=00, vjust=1, hjust=.2,color="gray")
#ExerciseTime

StandHours <- df2 %>% 
  group_by(date) %>% 
  summarize(value=as.numeric(as.character(appleStandHours))) %>% 
  arrange(date) %>%  
  ggplot(aes(x= date, y = value)) +
  geom_point(alpha = 0.3,color="#1EEAEF") +
  geom_smooth(span = .2, col = "darkblue",fill="#1EEAEF") +
  labs(title = "Midhun's Stand Hours Chart")  +
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank())+ 
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y")+
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray")+
  geom_hline(yintercept=c(12,18),linetype=2,color="blue") +
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=12, label="100% Stand Goal"), size=4, angle=00, vjust=1, hjust=.2, color="gray") 
#StandHours

grid.arrange(BodyMass, RestingHeartRate,VO2Max,ActiveEnergy,ExerciseTime,StandHours, nrow = 2,ncol=3) 
g<-arrangeGrob(BodyMass, RestingHeartRate,VO2Max,ActiveEnergy,ExerciseTime,StandHours, nrow = 2,ncol=3) 

ggsave('E:/Documents/Health/midhun_6month_health_summary.png', g, width = 30, height = 20, units = "cm")



#Actvities Trend
ActiveHour <- df %>%
  filter(type == 'DistanceWalkingRunning') %>% 
  group_by(date,wday,hour) %>% 
  summarize(steps=sum(value)) %>% 
  group_by(hour,wday) %>% 
  summarize(steps=sum(steps)) %>% 
  arrange(desc(steps)) %>%
  ggplot(aes(x=hour, y=wday,  fill=steps)) + 
  geom_tile(col = 'grey40') + 
  scale_fill_continuous(labels = scales::comma, low = 'grey95', high = '#008FD5') +
  theme(panel.grid.major = element_blank(),
        panel.background=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank()) +
  scale_x_continuous(
    breaks = c(0, 6, 12, 18),
    label = c("Midnight", "6 AM", "Midday", "6 PM")
  ) +
  scale_y_reverse(
    breaks = c(1,2,3,4,5,6,7),
    label = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
  ) +
  labs(title = "Midhun's Actvity Hour",x.axis='') +
  guides(fill=FALSE)+
  coord_equal()
#ActiveHour

ActiveDays<-df %>%
  filter(type == 'DistanceWalkingRunning') %>% 
  group_by(date,wday,day) %>% 
  summarize(steps=sum(value)) %>% 
  group_by(wday) %>% 
  summarize(steps=sum(steps)) %>% 
  arrange(desc(steps)) %>%
  
  ggplot(aes(x=1, y=wday,  fill=steps)) + 
  geom_tile(col = 'grey40') + 
  scale_fill_continuous(labels = scales::comma, low = 'grey95', high = '#008FD5') +
  theme(panel.grid.major = element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.line = element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank()) + 
  scale_y_reverse(
    breaks = c(1,2,3,4,5,6,7),
    label = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
  ) +
  labs(title = "Midhun's Actvity Week-Day",x.axis='') +
  guides(fill=FALSE)+
  coord_equal()
#ActiveDays

#Run Metrics 
df3 <- df_workout %>% 
  mutate(endDate = ymd_hms(endDate,tz="America/New_York"),
         date = date(endDate),
         year = year(endDate),
         month = month(endDate),
         day = day(endDate),
         yday = yday(endDate),
         wday = wday(endDate),
         hour = hour(endDate),
         minute = minute(endDate),
         pace = as.numeric(as.character(duration))/as.numeric(as.character(totalDistance))
  ) %>% 
  filter(endDate >= '2018-10-01') %>% 
  filter(endDate < '2019-06-02') %>%
  filter(workoutActivityType =='HKWorkoutActivityTypeRunning')

RunPace <- df3 %>%  
  arrange(date) %>%  
  ggplot(aes(x= date, y = pace)) +
  geom_point(alpha = 0.3,color="#efef1e") +
  geom_smooth(span = .2, col = "darkblue",fill="#efef1e") +
  labs(title = "Midhun's Running Pace Chart")  +
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank())+ 
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y")+
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(pace), label="Started Running"), size=4, angle=90, vjust=1,color="gray")+
  geom_vline(xintercept=as.numeric(as.Date("2019-03-17")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-03-17"),y=mean(pace), label="First Marathon Gave confidence"), size=4, angle=90, vjust=1,color="gray")+
  geom_hline(yintercept=c(12,18),linetype=2,color="blue") +
  geom_text(mapping=aes(x=as.Date("2018-11-01"),y=12, label="100% Stand Goal"), size=4, angle=00, vjust=1, hjust=.2, color="gray") 
#RunPace

RunDuration <- df3 %>%  
  group_by(date) %>%  
  summarize(value=sum(as.numeric(as.character(duration)))) %>%
  ggplot(aes(x= date, y = value)) +
  geom_point(alpha = 0.3,color="#1eb7ef") +
  geom_smooth(span = .2, col = "darkblue",fill="#1eb7ef") +
  labs(title = "Midhun's Running Duration Chart")+
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank()) + 
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") +
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray")
#RunDuration
insight<-arrangeGrob(ActiveHour,ActiveDays,RunPace,RunDuration,ncol=2,nrow=2) 
ggsave('E:/Documents/Health/midhun_Actvities_insight.png', insight, width = 30, height = 20, units = "cm")

df4 <- df_workout %>% 
  mutate(endDate = ymd_hms(endDate,tz="America/New_York"),
         date = date(endDate),
         year = year(endDate),
         month = month(endDate),
         day = day(endDate),
         yday = yday(endDate),
         wday = wday(endDate),
         hour = hour(endDate),
         minute = minute(endDate),
         workoutActivityTypesS = gsub("HKWorkoutActivityType","",workoutActivityType)
  ) %>% 
  filter(endDate >= '2018-10-01') %>% 
  filter(endDate < '2019-06-02')


ActivityType <- df4 %>%  
  group_by(date,workoutActivityTypesS) %>%  
  summarize(value=sum(as.numeric(as.character(totalEnergyBurned)))) %>%
  ggplot(aes(x= date, y = value)) +
  geom_point(aes(colour = factor(workoutActivityTypesS,shape = factor(workoutActivityTypesS)))) +
  geom_smooth(span = .2, col = "darkblue",fill="#1eb7ef") +
  labs(title = "Midhun's Running Duration Chart")+
  theme(
    #axis.text.y = element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    panel.background=element_blank()) + 
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%y") +
  geom_vline(xintercept=as.numeric(as.Date("2019-01-01")),linetype=2,color="red") +
  geom_text(mapping=aes(x=as.Date("2019-01-01"),y=mean(value), label="Started Running"), size=4, angle=90, vjust=1,color="gray")

ActivityType
